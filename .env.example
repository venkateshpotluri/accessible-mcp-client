# Accessible MCP Client Environment Configuration
# Copy this file to .env and update the values for your local development setup

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Anthropic API Key (Required for chat functionality)
# Get your API key from: https://console.anthropic.com/
# Format: sk-ant-api03-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Flask Secret Key (Required for session management)
# IMPORTANT: Generate a secure random key for production use!
# Use: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-change-in-production

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Flask Environment
# Options: development, production
FLASK_ENV=development

# Server Configuration
# Port for the Flask application to run on
PORT=5000

# Claude AI Configuration
# Model to use for chat functionality
CLAUDE_MODEL=claude-3-5-sonnet-20241022

# Maximum tokens for Claude responses
CLAUDE_MAX_TOKENS=4000

# Message and Session Limits
# Maximum characters allowed in a single chat message
MAX_MESSAGE_LENGTH=10000

# Maximum characters allowed for chat session titles
MAX_SESSION_TITLE_LENGTH=200

# MCP Configuration
# Default timeout for MCP operations (in seconds)
MCP_TIMEOUT=30

# Maximum number of concurrent MCP server connections
MAX_SERVERS=10

# Logging Configuration
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# PRODUCTION CONFIGURATION (Optional)
# =============================================================================

# These are typically set by your hosting platform in production
# Only needed if deploying to a custom environment

# Database URL (if using a database in the future)
# DATABASE_URL=postgresql://username:password@hostname:port/database

# Redis URL (if using Redis for sessions in the future)
# REDIS_URL=redis://localhost:6379

# Additional security headers (production)
# SECURE_SSL_REDIRECT=true
# SESSION_COOKIE_SECURE=true
# SESSION_COOKIE_HTTPONLY=true